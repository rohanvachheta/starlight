---
import type { Props } from '@astrojs/starlight/props';
import Default from '@astrojs/starlight/components/Hero.astro';

// Check if we have entry data and extract hero information
const entry = Astro.props.entry;
const data = entry?.data;
const hero = data?.hero;

// If no hero data or not a splash template, use default component
if (!hero || data?.template !== 'splash') {
  // Use default Hero component
} else {
  // Use custom hero
}
---

{hero && data?.template === 'splash' ? (
  <div class="hero sl-flex">
    <div class="sl-container">
      <div class="hero-content">
        <div class="hero-text">
          <h1 class="hero-title">
            {hero.title || data.title}
          </h1>
          {hero.tagline && (
            <p class="hero-tagline tagline">
              {hero.tagline}
            </p>
          )}
          <div class="hero-actions">
            {hero.actions?.map((action) => (
              <a
                href={action.link}
                class={`action ${action.variant || 'primary'}`}
                target={action.link.startsWith('http') ? '_blank' : undefined}
                rel={action.link.startsWith('http') ? 'noopener noreferrer' : undefined}
              >
                <span>{action.text}</span>
                {action.icon && (
                  <svg class="action-icon" width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
                    {action.icon === 'right-arrow' && (
                      <path d="M13.025 1l-2.847 2.828 6.176 6.176h-16.354v3.992h16.354l-6.176 6.176 2.847 2.828 10.975-11z"/>
                    )}
                    {action.icon === 'external' && (
                      <path d="M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"/>
                    )}
                  </svg>
                )}
              </a>
            ))}
          </div>
        </div>
        {hero.image && (
          <div class="hero-image">
            <img 
              src={typeof hero.image === 'string' ? hero.image : hero.image.file}
              alt={typeof hero.image === 'object' && hero.image.alt ? hero.image.alt : 'Hero image'}
              class="hero-img"
            />
          </div>
        )}
      </div>
    </div>
  </div>
) : (
  <Default {...Astro.props} />
)}

<style>
  .hero {
    background: linear-gradient(135deg, #0066cc 0%, #4285f4 100%);
    color: white;
    padding: 4rem 0;
    min-height: 70vh;
    align-items: center;
  }

  .hero-content {
    display: grid;
    grid-template-columns: 1fr;
    gap: 3rem;
    align-items: center;
    text-align: center;
  }

  @media (min-width: 768px) {
    .hero-content {
      grid-template-columns: 1fr auto;
      text-align: left;
    }
  }

  .hero-title {
    font-size: 3.5rem;
    font-weight: 700;
    margin-bottom: 1rem;
    background: linear-gradient(45deg, #fff, #e0e7ff);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    line-height: 1.1;
  }

  .hero-tagline {
    font-size: 1.25rem;
    opacity: 0.9;
    margin-bottom: 2rem;
    max-width: 600px;
  }

  .hero-actions {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
    justify-content: center;
  }

  @media (min-width: 768px) {
    .hero-actions {
      justify-content: flex-start;
    }
  }

  .action {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.5rem;
    border-radius: 6px;
    text-decoration: none;
    font-weight: 600;
    transition: all 0.3s ease;
  }

  .action.primary {
    background: #ff6b35;
    color: white;
  }

  .action.primary:hover {
    background: #e55a2e;
    transform: translateY(-2px);
  }

  .action.minimal {
    background: transparent;
    color: white;
    border: 2px solid rgba(255, 255, 255, 0.3);
  }

  .action.minimal:hover {
    background: rgba(255, 255, 255, 0.1);
    border-color: rgba(255, 255, 255, 0.5);
  }

  .action-icon {
    width: 16px;
    height: 16px;
  }

  .hero-image {
    display: flex;
    justify-content: center;
  }

  .hero-img {
    max-width: 300px;
    width: 100%;
    height: auto;
    border-radius: 50%;
    border: 4px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
  }

  @media (max-width: 768px) {
    .hero-title {
      font-size: 2.5rem;
    }
    
    .hero-tagline {
      font-size: 1.1rem;
    }
    
    .hero {
      padding: 3rem 0;
      min-height: 60vh;
    }
  }
</style>
